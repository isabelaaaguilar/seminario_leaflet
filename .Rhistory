30:25
A <- 5
rm(list=ls()) # Limpa o R e todos os objetos definidos
A
matrix(1:9,ncol=3,nrow=3)
install.packages(c("finalfit", "missForest"))
# Colocaremos então nossos códigos aqui...
print("... assim como as saídas do nosso Script.")
knitr::include_graphics("Imagens/estudar_experimentar_sm.png")
---
title: "Base para o Seminário"
author: "Autor(a)"
date: "`r Sys.Date()`"
output: html_document
---
# **Estrutura**
## **Introdução**
**Principais pontos da Introdução:**
* Apresentar a temática do relatório: *“Sobre o que irei falar?”*
* **Contextualizar o assunto:** Qual “dor” do nosso cliente estamos tentando “solucionar” a partir dessa ferramenta?
* Levar em consideração quem é o nosso **público!**
## **Apresentação**
**Principais pontos da Apresentação:**
* Apresentar a ferramenta de maneira mais detalhada, procurando mostrar a importância dela e como utilizá-la.
* Geralmente, foca-se mais na parte prática da temática: em qual contexto aplicá-la e explicar pontos importantes do tema.
## **Exemplos no cotidiano**
* Citar exemplos do cotidiano em que a técnica citada possa ser aplicada.
* *“Como esta técnica pode nos ajudar em situações do dia-a-dia dentro de nossa empresa?”*
## **Aplicação (Script)**
**Principais pontos da Aplicação:**
* Mostrar, na prática, como aplicar a técnica dentro do software/linguagem utilizada.
* Nessa seção, apresentamos o código utilizado para a implementação da técnica, assim como a demonstração de alguns exemplos desenvolvidos dentro dele.
```{r Help, echo=TRUE}
# Colocaremos então nossos códigos aqui...
print("... assim como as saídas do nosso Script.")
```
## **Novidades**
* Seguindo um dos principais pilares da nossa empresa, “Evolução e Inovação”, buscar trazer novidades com respeito a temática abordada.
* Essas novidades podem ser, por exemplo: maneiras inovadores de se aplicar a ferramenta, alternativas utilizadas a técnica em questão, curiosidades acerca do tema, dentre outras informações que o palestrante julgue interessante compartilhar.
```{r Novidades, echo=FALSE, fig.cap="", fig.align = 'center', out.width = '30%'}
knitr::include_graphics("Imagens/estudar_experimentar_sm.png")
```
# Colocaremos então nossos códigos aqui...
print("... assim como as saídas do nosso Script.")
knitr::include_graphics("Imagens/estudar_experimentar_sm.png")
---
title: "Pacote Leaflet"
author: "Isabela R. Aguilar"
date: "`r Sys.Date()`"
output: html_document
---
# **Estrutura**
## **Introdução**
**Principais pontos da Introdução:**
* Apresentar a temática do relatório: *“Sobre o que irei falar?”*
* **Contextualizar o assunto:** Qual “dor” do nosso cliente estamos tentando “solucionar” a partir dessa ferramenta?
* Levar em consideração quem é o nosso **público!**
## **Apresentação**
**Principais pontos da Apresentação:**
* Apresentar a ferramenta de maneira mais detalhada, procurando mostrar a importância dela e como utilizá-la.
* Geralmente, foca-se mais na parte prática da temática: em qual contexto aplicá-la e explicar pontos importantes do tema.
## **Exemplos no cotidiano**
* Citar exemplos do cotidiano em que a técnica citada possa ser aplicada.
* *“Como esta técnica pode nos ajudar em situações do dia-a-dia dentro de nossa empresa?”*
## **Aplicação (Script)**
**Principais pontos da Aplicação:**
* Mostrar, na prática, como aplicar a técnica dentro do software/linguagem utilizada.
* Nessa seção, apresentamos o código utilizado para a implementação da técnica, assim como a demonstração de alguns exemplos desenvolvidos dentro dele.
```{r Help, echo=TRUE}
# Colocaremos então nossos códigos aqui...
print("... assim como as saídas do nosso Script.")
```
## **Novidades**
* Seguindo um dos principais pilares da nossa empresa, “Evolução e Inovação”, buscar trazer novidades com respeito a temática abordada.
* Essas novidades podem ser, por exemplo: maneiras inovadores de se aplicar a ferramenta, alternativas utilizadas a técnica em questão, curiosidades acerca do tema, dentre outras informações que o palestrante julgue interessante compartilhar.
```{r Novidades, echo=FALSE, fig.cap="", fig.align = 'center', out.width = '30%'}
knitr::include_graphics("Imagens/estudar_experimentar_sm.png")
```
---
title: 'Pacote Leaflet'
author: 'Isabela R. Aguilar'
date: '`r Sys.Date()`'
output: html_document
---
---
title: 'Highcharter'
author: 'Isabela Aguilar'
date: "`r Sys.Date()`"
output:
html_document:
toc: true
toc_depth: 5
toc_float:
collapsed: false
smooth_scroll: true
---
install.packages("VGAM")
library(rmarkdown)
unlink('Base Seminários_cache', recursive = TRUE)
install.packages("bookdown")
library(ggplot2)
library(dplyr)
library(viridis)
library(brazilmaps)
library(geobr)
library(sf)
library(maptools)
library(leaflet)
theme_set(theme_bw())
mapa <- brazilmaps::get_brmap("State")
mapa <- read_state(showProgress = FALSE)
class(mapa)
acesso_san <- data.frame(code_state = c(12, 27, 16, 13, 29, 23, 53, 32, 52, 21, 51, 50, 31, 15,
25, 41, 26, 22, 33, 24, 43, 11, 14, 42, 35, 28, 17),
com_rede = c(0.273, 0.412, 0.313, 0.177, 0.513, 0.696, 1.000, 0.974, 0.280, 0.065,
0.191, 0.449, 0.916, 0.063, 0.731, 0.421, 0.881, 0.045, 0.924, 0.353,
0.405, 0.096, 0.400, 0.352, 0.998, 0.347, 0.129))
coord_pontos <- mapa %>%
left_join(acesso_san, by = "code_state") %>%
mutate(com_rede = 100*com_rede) %>%
st_centroid()
data.frame(st_coordinates(coord_pontos),
com_rede = coord_pontos$com_rede,
UF = coord_pontos$name_state) %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(~ X, ~ Y,
label = ~ as.character(paste0(UF, ": ", com_rede, "%")),
labelOptions = labelOptions(textsize = "13px"),
radius = ~ com_rede/10,
fillOpacity = 0.5)
data.frame(st_coordinates(coord_pontos),
com_rede = coord_pontos$com_rede,
UF = coord_pontos$name_state) %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(~ X, ~ Y,
label = ~ as.character(paste0(UF, ": ", com_rede, "%")),
labelOptions = labelOptions(textsize = "13px"),
radius = ~ com_rede/10,
fillOpacity = 0.5)
mapa<- data.frame(st_coordinates(coord_pontos),
com_rede = coord_pontos$com_rede,
UF = coord_pontos$name_state) %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(~ X, ~ Y,
label = ~ as.character(paste0(UF, ": ", com_rede, "%")),
labelOptions = labelOptions(textsize = "13px"),
radius = ~ com_rede/10,
fillOpacity = 0.5)
mapa
leaflet(dados) %>%
addTiles() %>%
addCircleMarkers(~ X, ~ Y,
label = ~ as.character(paste0(UF, ": ", com_rede, "%")),
labelOptions = labelOptions(textsize = "13px"),
radius = ~ sqrt(com_rede),
fillOpacity = 0.5)
dados <- data.frame(st_coordinates(coord_pontos),
com_rede = coord_pontos$com_rede,
UF = coord_pontos$name_state)
leaflet(dados) %>%
addTiles() %>%
addCircleMarkers(~ X, ~ Y,
label = ~ as.character(paste0(UF, ": ", com_rede, "%")),
labelOptions = labelOptions(textsize = "13px"),
radius = ~ sqrt(com_rede),
fillOpacity = 0.5)
View(dados)
head(dados)
m <- leaflet(dados) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(data = dados,
smoothFactor = 0.5,
fillOpacity = 0.5,
weight = 0.5,
color = ~pal(com_rede),
opacity = 0.8,
highlightOptions = highlightOptions(color = "black",
weight = 2,
bringToFront = TRUE),
popup = ~paste0(sep = " ",
"<b>Cidade: </b>", UF, "<br>",
"<b>Casos confirmados: </b>", com_rede),
label = ~UF)
pal <- colorNumeric(palette = "Reds", domain = dados$com_rede)
m <- leaflet(dados) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(data = dados,
smoothFactor = 0.5,
fillOpacity = 0.5,
weight = 0.5,
color = ~pal(com_rede),
opacity = 0.8,
highlightOptions = highlightOptions(color = "black",
weight = 2,
bringToFront = TRUE),
popup = ~paste0(sep = " ",
"<b>Cidade: </b>", UF, "<br>",
"<b>Casos confirmados: </b>", com_rede),
label = ~UF)
shp <- get_brmap("City", geo.filter = list(State = 31))
shp$City <- as.character(shp$City)
# definindo que o dataframe contém dados geométricos
shp_sf <- st_as_sf(shp)%>%
st_transform(4326)
shp_sf
View(shp)
View(shp_sf)
shp <- get_brmap("State")
shp$City <- as.character(shp$City)
View(shp)
shp <- get_brmap("State")
# definindo que o dataframe contém dados geométricos
shp_sf <- st_as_sf(shp)%>%
st_transform(4326)
pal <- colorNumeric(palette = "Reds", domain = dados$com_rede)
m <- leaflet(dados) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(data = dados,
smoothFactor = 0.5,
fillOpacity = 0.5,
weight = 0.5,
color = ~pal(com_rede),
opacity = 0.8,
highlightOptions = highlightOptions(color = "black",
weight = 2,
bringToFront = TRUE),
popup = ~paste0(sep = " ",
"<b>Cidade: </b>", UF, "<br>",
"<b>Casos confirmados: </b>", com_rede),
label = ~UF)
x<- dados %>%  mutate(UF= toupper(UF))
View(x)
hp_sf <- left_join(shp_sf,x, by = c("nome" = "UF"))
View(hp_sf)
m <- leaflet(hp_sf) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(data = hp_sf,
smoothFactor = 0.5,
fillOpacity = 0.5,
weight = 0.5,
color = ~pal(com_rede),
opacity = 0.8,
highlightOptions = highlightOptions(color = "black",
weight = 2,
bringToFront = TRUE),
popup = ~paste0(sep = " ",
"<b>Cidade: </b>", nome, "<br>",
"<b>Casos confirmados: </b>", com_rede),
label = ~nome)
m
m <- leaflet(hp_sf) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(data = hp_sf,
smoothFactor = 0.5,
fillOpacity = 0.5,
weight = 0.5,
color = ~pal(com_rede),
opacity = 0.8,
highlightOptions = highlightOptions(color = "black",
weight = 2,
bringToFront = TRUE),
popup = ~paste0(sep = " ",
"<b>UF: </b>", nome, "<br>",
"<b>Municípios com rede de esgoto: </b>", com_rede),
label = ~nome)
m
m <- leaflet(hp_sf) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(data = hp_sf,
smoothFactor = 0.5,
fillOpacity = 0.5,
weight = 0.5,
color = ~pal(com_rede),
opacity = 0.8,
highlightOptions = highlightOptions(color = "black",
weight = 2,
bringToFront = TRUE),
popup = ~paste0(sep = " ",
"<b>UF: </b>", nome, "<br>",
"<b>Municípios com rede de esgoto:(%) </b>", com_rede,"%"),
label = ~nome)
m
mapa <- brazilmaps::get_brmap("State")
mapa <- read_state(showProgress = FALSE)
shp_sf <- st_as_sf(mapa)%>%
st_transform(4326)
geo <- st_as_sf(mapa)%>%
st_transform(4326)
geo <- st_as_sf(mapa)%>%
st_transform(4326)
dados_final <- left_join(geo,dados, by = c("nome" = "UF"))
View(geo)
```{r, warning=FALSE, message=FALSE}
htmltools::img(src = knitr::image_uri("Imagens/nytimes.png"),
alt = 'logo'
#style = 'position:absolute; top:0; right:0px;  padding:10px;'
)
library(dplyr)
library(brazilmaps)
library(geobr)
library(sf)
library(maptools)
library(leaflet)
htmltools::img(src = knitr::image_uri("logo.png"),
alt = 'logo',
style = 'position:absolute; top:0; right:0px;  padding:10px;'
)
